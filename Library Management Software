import json

# Function to load library data from a file
def load_library(filename):
    try:
        with open(filename, 'r') as file:
            library_data = json.load(file)
    except FileNotFoundError:
        library_data = []
    return library_data

# Function to save library data to a file
def save_library(filename, library_data):
    with open(filename, 'w') as file:
        json.dump(library_data, file)

# Function to add a book to the library
def add_book(library_data, title, author):
    book = {"title": title, "author": author}
    library_data.append(book)
    print(f"Book '{title}' by {author} added to the library.")

# Function to display all books in the library
def display_books(library_data):
    if not library_data:
        print("The library is empty.")
    else:
        print("List of books in the library:")
        for index, book in enumerate(library_data, start=1):
            print(f"{index}. {book['title']} by {book['author']}")

# Main program
library_file = "library.json"
library_data = load_library(library_file)

while True:
    print("\nLibrary Management System")
    print("1. Add a Book")
    print("2. Display Books")
    print("3. Save Library Data")
    print("4. Exit")

    choice = input("Select an option: ")

    if choice == '1':
        title = input("Enter book title: ")
        author = input("Enter author name: ")
        add_book(library_data, title, author)
    elif choice == '2':
        display_books(library_data)
    elif choice == '3':
        save_library(library_file, library_data)
        print("Library data saved to file.")
    elif choice == '4':
        print("Exiting the program.")
        break
    else:
        print("Invalid option. Please try again.")

# print(help(json.dump))
